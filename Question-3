def subsetXORSum(nums):
    def calculateXOR(subset):
        xor_total = 0
        for num in subset:
            xor_total ^= num
        return xor_total

    def generateSubsets(index, current_subset):
        if index == len(nums):
            xor_totals.append(calculateXOR(current_subset))
            return

        # Include the current element in the subset
        generateSubsets(index + 1, current_subset + [nums[index]])

        # Exclude the current element from the subset
        generateSubsets(index + 1, current_subset)

    xor_totals = []
    generateSubsets(0, [])

    return sum(xor_totals)

# Example usage:
nums1 = [1, 3]
print(subsetXORSum(nums1))  # Output: 6

nums2 = [5, 1, 6]
print(subsetXORSum(nums2))  # Output: 28
